/* -----------------------------------------------------------------------------

  SLIDE AND PUSH MENUS COMPONENT
  
----------------------------------------------------------------------------- */

$menu-break: 320px;
$menu-width: 300px;
$menu-height: 160px;

/**
 * Menu overview.
 */

.c-menu {
  position: fixed;
  z-index: 200;
  background-color: $color-black;
  -webkit-transition: all 0.5s ease-in-out;
	-moz-transition:    all 0.5s ease-in-out;
	-ms-transition:     all 0.5s ease-in-out;
	-o-transition:      all 0.5s ease-in-out;
	transition:         all 0.5s ease-in-out;
}
.c-menu .wrap {
	max-width:90%;
}
.o-wrapper{
	transition: transform 0.5s ease-in-out;
}
.c-menu__items {
  list-style: none;
  margin: 0;
  padding: 0;
}

.c-button:hover{
	cursor:pointer;
}

/**
 * Left and right menus
 *
 * Slide and push menus coming in from the left and right inherit a lot of
 * common styles. We'll start each of them off by doing up the common styles
 * for each version, followed by individual styles.
 *
 * The various versions are governed by modifier classes.
 */


/**
 * Top and bottom menus
 *
 * Slide and push menus coming in from the top and bottom inherit a lot of
 * common styles. We'll start each of them off by doing up the common styles
 * for each version, followed by individual styles.
 *
 * The various versions are governed by modifier classes.

/**
 * Common modifiers for top/bottom menus
 */


.c-menu--push-top,
.c-menu--push-bottom {
  vertical-align: middle;
  width: 100%;
  height: $menu-height;
  overflow-x: scroll;
}

.c-menu--push-top .c-menu__items,
.c-menu--push-bottom .c-menu__items {
  display: inline-block;
  text-align: center;
}


.c-menu--push-top .c-menu__item,
.c-menu--push-bottom .c-menu__item {
  display: inline-block;
  line-height: $menu-height;
}


.c-menu--push-top .c-menu__link,
.c-menu--push-bottom .c-menu__link {
  display: block;
  padding: 0 4px;
  color: $color-grey;
}


.c-menu--push-top .c-menu__close,
.c-menu--push-bottom .c-menu__close {
	margin:10px 0;
  	display: block;
}

.c-menu__close .icon-cross {
	width: 30px;
	height: 30px;
	float:right;
	color:$color-grey;
}

/**
 * Slide/Push Menu Top.
 */


.c-menu--push-top {
  top: 0;
  left: 0;
  /* transform: translateY(-$menu-height); */
  height:0;
}


.c-menu--push-top.is-active {
  /* transform: translateY(0); */
  height:160px;
}

/**
 * Slide/Push Menu Bottom.
 */


.c-menu--push-bottom {
  bottom: 0;
  left: 0;
  transform: translateY($menu-height);
}

.c-menu--push-bottom.is-active {
  transform: translateY(0);
}

/**
 * Wrapper states.
 *
 * Various wrapper states occur depending on if a menu is pushing into view, in
 * which case, the wrapper has to be pushed by the respective distance.
 */



.o-wrapper.has-push-top {
  /* transform: translateY($menu-height); */
}

.o-wrapper.has-push-bottom {
  transform: translateY(-$menu-height);
}

/**
 * Body states.
 *
 * When a menu is active, we want to hide the overflows on the body to prevent
 * awkward document scrolling.
 */

body.has-active-menu {
  overflow: hidden;
}

/**
 * Close button resets.
 */

.c-menu__close {
  color: $color-grey;
  background-color: transparent;
  border: none;
  box-shadow: none;
  border-radius: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
}

.c-menu__close:focus {
  outline: none;
}

/* -----------------------------------------------------------------------------

  MASK COMPONENT
  
----------------------------------------------------------------------------- */

.c-mask {
  position: fixed;
  z-index: 100;
  top: 0;
  left: 0;
  overflow: hidden;
  width: 0;
  height: 0;
  background-color: $color-black;
  opacity: 0;
  transition: opacity 0.3s, width 0s 0.3s, height 0s 0.3s;
}

.c-mask.is-active {
  width: 100%;
  height: 100%;
  opacity: 0.25;
  transition: opacity 0.3s;
}

/* -----------------------------------------------------------------------------

  search widget
  
----------------------------------------------------------------------------- */

.c-menu .widget{
	position:relative;
	display: block;
	margin-top:0px;
	width:100%;
	float:left;
}

.c-menu .widget .widget-wrap {
	position:relative;
	margin:0 auto;
	width:100%;
	max-width:420px;
}

.c-button_icon{
	position:absolute;
	right:0.8em;
	top:0.8em;
}

.c-button_icon .icon-search {
	color:$color-grey;
	height:20px;
	width:20px;
}
/* Input */

.input {
	position: relative;
	z-index: 1;
	display: inline-block;
	margin: 1em;
	max-width: 350px;
	width: calc(100% - 2em);
	vertical-align: top;
}

.c-menu input[type="search"],
.input__field {
	position: relative;
	display: block;
	float: right;
	padding: 0.8em;
	width: 60%;
	border: none;
	border-radius: 0;
	font-weight:400;
	-webkit-appearance: none; /* for box shadows to show on iOS */
}

.c-menu input[type="search"].focus,
.input__field:focus {
	outline: none;
}

.input__label {
	display: inline-block;
	float: right;
	padding: 0;
	font-weight: 600;
	@include font(1.2, 1.2);
	text-transform:uppercase;
	-webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

.input__label-content {
	position: relative;
	display: block;
	padding: 1.6em 0;
	width: 100%;
}

/* Yoko */
.c-menu input[type="search"],
.input__field--yoko {
	z-index: 10;
	width: 100%;
	background: transparent;
	color: $color-black;
	opacity: 0;
	-webkit-transition: opacity 0.3s;
	transition: opacity 0.3s;
}

.c-menu label,
.input__label--yoko {
	position: relative;
	width: 100%;
	color: $color-grey;
	text-align: left;
}
.c-menu label::before,
.input__label--yoko::before {
	content: '';
	position: absolute;
	bottom: 100%;
	left: 0;
	width: 100%;
	height: 4em;
	background: $color-grey;
	-webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 90deg);
	transform: perspective(1000px) rotate3d(1, 0, 0, 90deg);
	-webkit-transform-origin: 50% 100%;
	transform-origin: 50% 100%;
	-webkit-transition: -webkit-transform 0.3s;
	transition: transform 0.3s;
}
.c-menu label::after,
.input__label--yoko::after {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 4px;
	background: $color-grey;
	-webkit-transform-origin: 50% 0%;
	transform-origin: 50% 0%;
	-webkit-transition: -webkit-transform 0.3s;
	transition: transform 0.3s;
}

.input__label-content--yoko {
	padding: 0.75em 0;
}
.c-menu input[type="search"]:focus,
.input__field--yoko:focus,
.input--filled .input__field--yoko {
	opacity: 1;
	-webkit-transition-delay: 0.3s;
	transition-delay: 0.3s;
}
.c-menu input[type="search"] + .c-menu label::before,
.input__field--yoko:focus + .input__label--yoko::before,
.input--filled .input__label--yoko::before {
	-webkit-transform: perspective(1000px) rotate3d(1, 0, 0, 0deg);
	transform: perspective(1000px) rotate3d(1, 0, 0, 0deg);
}

.input__field--yoko:focus + .input__label--yoko,
.input--filled .input__label--yoko {
	pointer-events: none;
}
.c-menu input[type="search"] + .c-menu label::after,
.input__field--yoko:focus + .input__label--yoko::after,
.input--filled .input__label--yoko::after {
	-webkit-transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
	transform: perspective(1000px) rotate3d(1, 0, 0, -90deg);
}

/* -----------------------------------------------------------------------------

  search again in search results
  
----------------------------------------------------------------------------- */

.search_again{
	position:relative;
	margin:0 auto;
	width:100%;
	max-width:420px;
}

.search_again input[type="submit"] {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    width: 1px;
}

.Black .search_again input{
	color: $color-black;
}
.Black .search_again .input__label--yoko {
    color: $color-grey;
}

.Black .search_again .input__label--yoko::before, 
.Black .search_again .input__label--yoko::after {
    background: #ccc;
}